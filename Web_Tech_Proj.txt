<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todo List</title>
    <style>

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: linear-gradient(135deg, #e6d7b9 0%, #eecea5 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .container {
            background-color: rgba(255, 255, 255, 0.9);
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
            width: 100%;
            max-width: 600px;
            overflow: hidden;
            position: relative;
        }

        .header {
            background-color: #d4a373;
            color: #2b2118;
            padding: 20px;
            text-align: center;
            font-size: 24px;
            font-weight: bold;
            letter-spacing: 1px;
            border-bottom: 5px solid #bc8a5f;
        }

        .todo-section {
            padding: 30px;
        }


        .input-group {
            display: flex;
            margin-bottom: 25px;
        }

        .task-input {
            flex: 1;
            padding: 12px 15px;
            border: 2px solid #e6ccb2;
            border-right: none;
            border-radius: 8px 0 0 8px;
            font-size: 16px;
            outline: none;
            transition: border-color 0.3s;
        }

        .task-input:focus {
            border-color: #bc8a5f;
        }

        .add-btn {
            background-color: #d4a373;
            color: white;
            border: none;
            padding: 0 20px;
            border-radius: 0 8px 8px 0;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: background-color 0.3s ease;
        }

        .add-btn:hover {
            background-color: #bc8a5f;
        }


        .todo-list {
            max-height: 350px;
            overflow-y: auto;
        }

        .task {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: #f8f8f8;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 12px;
            transition: all 0.3s ease;
        }

        .task:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }

        .task-content {
            display: flex;
            align-items: center;
            flex: 1;
        }

        .checkbox {
            width: 20px;
            height: 20px;
            border: 2px solid #d4a373;
            border-radius: 4px;
            margin-right: 15px;
            cursor: pointer;
            position: relative;
            transition: background-color 0.3s ease;
        }

        .checkbox.checked {
            background-color: #d4a373;
        }

        .checkbox.checked::after {
            content: "✓";
            position: absolute;
            color: white;
            font-size: 14px;
            top: -2px;
            left: 4px;
        }

        .task-text {
            font-size: 16px;
            color: #333;
            transition: all 0.3s ease;
        }

        .task.completed .task-text {
            text-decoration: line-through;
            color: #aaa;
        }

        .delete-btn {
            background-color: transparent;
            border: none;
            cursor: pointer;
            font-size: 18px;
            opacity: 0.6;
            transition: opacity 0.3s ease;
            padding: 5px;
            color: #b06161;
        }

        .delete-btn:hover {
            opacity: 1;
        }


        .empty-state {
            text-align: center;
            padding: 30px 0;
            color: #aaa;
            font-size: 16px;
            font-style: italic;
        }


        .todo-list::-webkit-scrollbar {
            width: 6px;
        }

        .todo-list::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }

        .todo-list::-webkit-scrollbar-thumb {
            background: #d4a373;
            border-radius: 10px;
        }

        .todo-list::-webkit-scrollbar-thumb:hover {
            background: #bc8a5f;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">Todo List</div>
        
        <div class="todo-section">
            <div class="input-group">
                <input type="text" id="task-input" class="task-input" placeholder="Add a new task...">
                <button id="add-btn" class="add-btn">Add</button>
            </div>

            <div id="todo-list" class="todo-list">

            </div>
        </div>
    </div>

    <script>
        const taskInput = document.getElementById("task-input");
        const addButton = document.getElementById("add-btn");
        const todoList = document.getElementById("todo-list");

        let tasks = [
            { id: 1, text: "Task 1", completed: true },
            { id: 2, text: "Task 2", completed: false },
        ];

        renderTasks();
        
        addButton.addEventListener("click", addTask);
        taskInput.addEventListener("keypress", function(e) {
            if (e.key === "Enter") {
                addTask();
            }
        });

        function addTask() {
            const taskText = taskInput.value.trim();
            
            if (taskText === "") return;
            
            const newTask = {
                id: Date.now(),
                text: taskText,
                completed: false
            };
            
            tasks.push(newTask);
            renderTasks();
            
            taskInput.value = "";
            taskInput.focus();
        }

        function toggleTask(id) {
            tasks = tasks.map(task => {
                if (task.id === id) {
                    return { ...task, completed: !task.completed };
                }
                return task;
            });
            
            renderTasks();
        }

        function deleteTask(id) {
            tasks = tasks.filter(task => task.id !== id);
            renderTasks();
        }

        function renderTasks() {
            todoList.innerHTML = "";
            
            if (tasks.length === 0) {
                const emptyState = document.createElement("div");
                emptyState.className = "empty-state";
                emptyState.textContent = "No tasks to show";
                todoList.appendChild(emptyState);
                return;
            }
            
            tasks.forEach(task => {
                const taskElement = document.createElement("div");
                taskElement.className = `task ${task.completed ? "completed" : ""}`;
                
                taskElement.innerHTML = `
                    <div class="task-content">
                        <div id="checkbox-${task.id}" class="checkbox ${task.completed ? "checked" : ""}"></div>
                        <div class="task-text">${task.text}</div>
                    </div>
                    <button id="delete-${task.id}" class="delete-btn">×</button>
                `;
                
                todoList.appendChild(taskElement);
                
                document.getElementById(`checkbox-${task.id}`).addEventListener("click", () => toggleTask(task.id));
                document.getElementById(`delete-${task.id}`).addEventListener("click", () => deleteTask(task.id));
            });
        }
    </script>
</body>
</html>